# Docker Compose para SonarQube Local
# ======================================
# 
# Este arquivo facilita a execução do SonarQube localmente
# usando Docker Compose.
#
# Uso:
#   docker-compose -f docker-compose.sonarqube.yml up -d
#
# Parar:
#   docker-compose -f docker-compose.sonarqube.yml down
#
# Ver logs:
#   docker-compose -f docker-compose.sonarqube.yml logs -f

services:
  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube-local
    restart: unless-stopped
    
    # Configurações de ambiente
    environment:
      # Configurações do Elasticsearch (necessário para SonarQube)
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      
      # Configurações opcionais
      # - SONAR_JDBC_URL=jdbc:postgresql://db:5432/sonar
      # - SONAR_JDBC_USERNAME=sonar
      # - SONAR_JDBC_PASSWORD=sonar
    
    # Portas
    ports:
      - "9000:9000"  # Interface Web
      - "9092:9092"  # Search (Elasticsearch)
    
    # Volumes para persistência de dados
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp
    
    # Limites de recursos (ajuste conforme necessário)
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9000/api/system/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    
    # Configurações do sistema
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 4096
        hard: 4096

  # PostgreSQL (Opcional - SonarQube usa H2 por padrão)
  # Descomente se quiser usar PostgreSQL para produção
  # db:
  #   image: postgres:15-alpine
  #   container_name: sonarqube-db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=sonar
  #     - POSTGRES_PASSWORD=sonar
  #     - POSTGRES_DB=sonar
  #   volumes:
  #     - postgresql_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U sonar"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

# Volumes nomeados para persistência
volumes:
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_logs:
    driver: local
  sonarqube_temp:
    driver: local
  # postgresql_data:
  #   driver: local

# Rede (opcional)
networks:
  default:
    name: sonarqube-network

