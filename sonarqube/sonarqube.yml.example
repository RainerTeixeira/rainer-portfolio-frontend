# Exemplo de Workflow do GitHub Actions para SonarQube
# 
# Este arquivo demonstra como integrar an√°lise SonarQube no CI/CD
# 
# Para usar:
# 1. Renomeie para sonarqube.yml (remova .example)
# 2. Configure os secrets no GitHub:
#    - SONAR_TOKEN: Token gerado no SonarQube
#    - SONAR_HOST_URL: URL do servidor SonarQube
# 3. Ajuste conforme necess√°rio
#
# Secrets necess√°rios:
#   - SONAR_TOKEN (obrigat√≥rio)
#   - SONAR_HOST_URL (opcional, padr√£o: https://sonarcloud.io)

name: SonarQube Analysis

# Quando executar
on:
  # Em push para main
  push:
    branches:
      - main
      - develop
  
  # Em Pull Requests para main
  pull_request:
    branches:
      - main
      - develop
    types: [opened, synchronize, reopened]
  
  # Permitir execu√ß√£o manual
  workflow_dispatch:

# Permiss√µes necess√°rias
permissions:
  contents: read
  pull-requests: write

jobs:
  sonarqube:
    name: An√°lise SonarQube
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout do c√≥digo
      - name: Checkout c√≥digo
        uses: actions/checkout@v4
        with:
          # Desabilitar shallow clone para melhor an√°lise
          fetch-depth: 0
      
      # 2. Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # 3. Instalar depend√™ncias
      - name: Instalar depend√™ncias
        run: npm ci
      
      # 4. Executar linter
      - name: Executar ESLint
        run: npm run lint
        continue-on-error: true
      
      # 5. Verificar tipos TypeScript
      - name: Verificar tipos
        run: npm run type-check
        continue-on-error: true
      
      # 6. (Opcional) Executar testes e gerar cobertura
      # Descomente se tiver testes configurados
      # - name: Executar testes
      #   run: npm test -- --coverage
      
      # 7. An√°lise SonarQube
      - name: An√°lise SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL || 'https://sonarcloud.io' }}
        with:
          # Argumentos adicionais (opcional)
          args: >
            -Dsonar.projectKey=rainer-portfolio-frontend
            -Dsonar.organization=seu-org
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
      
      # 8. Aguardar Quality Gate
      - name: Verificar Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL || 'https://sonarcloud.io' }}
        # N√£o falhar se quality gate falhar (pode ser configurado)
        continue-on-error: true
      
      # 9. Comentar no PR (opcional)
      - name: Comentar no PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sonarUrl = process.env.SONAR_HOST_URL || 'https://sonarcloud.io';
            const projectKey = 'rainer-portfolio-frontend';
            const dashboardUrl = `${sonarUrl}/dashboard?id=${projectKey}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üìä An√°lise SonarQube Conclu√≠da\n\n‚úÖ A an√°lise de c√≥digo foi conclu√≠da.\n\nüîç [Ver Resultados no SonarQube](${dashboardUrl})`
            });

# Workflow alternativo usando SonarScanner CLI
# -------------------------------------------
# Se preferir usar o SonarScanner CLI diretamente:
#
# jobs:
#   sonarqube-cli:
#     name: An√°lise SonarQube (CLI)
#     runs-on: ubuntu-latest
#     
#     steps:
#       - name: Checkout c√≥digo
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0
#       
#       - name: Configurar Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'
#       
#       - name: Instalar depend√™ncias
#         run: npm ci
#       
#       - name: Instalar SonarScanner
#         run: |
#           wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
#           unzip -q sonar-scanner-cli-*.zip
#           sudo mv sonar-scanner-* /opt/sonar-scanner
#           sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner
#       
#       - name: Executar an√°lise
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#         run: |
#           sonar-scanner \
#             -Dsonar.projectKey=rainer-portfolio-frontend \
#             -Dsonar.sources=. \
#             -Dsonar.host.url=$SONAR_HOST_URL \
#             -Dsonar.login=$SONAR_TOKEN

