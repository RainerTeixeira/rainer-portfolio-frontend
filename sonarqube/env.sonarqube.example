# ==========================================
# Variáveis de Ambiente para SonarQube
# ==========================================
#
# Este arquivo contém exemplos de variáveis de ambiente
# para configuração do SonarQube.
#
# USO:
# 1. Copie este arquivo: cp env.sonarqube.example .env.sonarqube
# 2. Preencha os valores apropriados
# 3. Carregue as variáveis:
#    - Windows (PowerShell): Get-Content .env.sonarqube | ForEach-Object { $var = $_.Split('='); [System.Environment]::SetEnvironmentVariable($var[0], $var[1]) }
#    - Linux/Mac (Bash): export $(cat .env.sonarqube | xargs)
#
# IMPORTANTE: Nunca commite este arquivo com valores reais!
# Adicione .env.sonarqube ao .gitignore

# ==========================================
# CONFIGURAÇÃO BÁSICA
# ==========================================

# Token de autenticação do SonarQube
# Gere em: http://localhost:9000/account/security
SONAR_TOKEN=seu-token-gerado-aqui

# URL do servidor SonarQube
# Para servidor local:
SONAR_HOST_URL=http://localhost:9000
# Para SonarCloud:
# SONAR_HOST_URL=https://sonarcloud.io

# Chave do projeto
SONAR_PROJECT_KEY=rainer-portfolio-frontend

# Nome do projeto (opcional)
SONAR_PROJECT_NAME=Rainer Portfolio Frontend

# Versão do projeto (opcional)
SONAR_PROJECT_VERSION=1.0.0

# ==========================================
# CONFIGURAÇÕES AVANÇADAS
# ==========================================

# Organização (apenas para SonarCloud)
# SONAR_ORGANIZATION=sua-organizacao

# Diretórios fonte (se diferente do padrão)
# SONAR_SOURCES=app,components,hooks,lib

# Exclusões adicionais
# SONAR_EXCLUSIONS=**/*.spec.ts,**/*.test.tsx

# Cobertura de testes
# SONAR_JAVASCRIPT_LCOV_REPORT_PATHS=coverage/lcov.info

# Modo verbose (debug)
# SONAR_VERBOSE=true
# SONAR_LOG_LEVEL=DEBUG

# Aguardar quality gate
# SONAR_QUALITYGATE_WAIT=false

# ==========================================
# CONFIGURAÇÕES DO DOCKER (OPCIONAL)
# ==========================================

# Porta do SonarQube
# SONAR_PORT=9000

# Limites de memória (em GB)
# SONAR_MEMORY_LIMIT=4G
# SONAR_MEMORY_RESERVATION=2G

# PostgreSQL (se usar banco externo)
# POSTGRES_USER=sonar
# POSTGRES_PASSWORD=sonar_password_seguro
# POSTGRES_DB=sonar
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432

# ==========================================
# INTEGRAÇÃO CI/CD
# ==========================================

# Para GitHub Actions, GitLab CI, etc.
# Configure estes valores nos secrets do seu CI/CD

# GitHub Actions:
# - SONAR_TOKEN
# - SONAR_HOST_URL

# GitLab CI:
# - SONAR_TOKEN
# - SONAR_HOST_URL

# Azure DevOps:
# - SONAR_TOKEN
# - SONAR_HOST_URL

# ==========================================
# EXEMPLOS DE USO
# ==========================================

# Windows PowerShell:
# ---------------------
# $env:SONAR_TOKEN="seu-token"
# $env:SONAR_HOST_URL="http://localhost:9000"
# sonar-scanner

# Linux/Mac Bash:
# ---------------
# export SONAR_TOKEN="seu-token"
# export SONAR_HOST_URL="http://localhost:9000"
# sonar-scanner

# Docker Compose:
# ---------------
# docker-compose -f docker-compose.sonarqube.yml up -d

# NPM Script:
# -----------
# npm run sonar:local

# ==========================================
# NOTAS
# ==========================================

# 1. Mantenha o SONAR_TOKEN seguro e nunca o exponha publicamente
# 2. Use diferentes tokens para ambientes diferentes (dev, staging, prod)
# 3. Tokens podem ser revogados em: http://localhost:9000/account/security
# 4. Para projetos públicos no SonarCloud, você pode omitir o token
# 5. Verifique a documentação para opções avançadas:
#    https://docs.sonarqube.org/latest/analysis/analysis-parameters/

